# nfs_setup.yml
# Playbook que configura un servidor NFS en CentOS de forma idempotente
- name: Configurar servidor NFS en CentOS # Nombre del play (aparece en la salida)
  hosts: centos # Grupo/host objetivo definido en inventory.ini
  become: true # Ejecutar tareas con privilegios (sudo)
  collections:
    - ansible.posix # Usamos módulos de la colección ansible.posix (firewalld, seboolean, etc.)

  vars:
    nfs_export_path: /var/nfs_shared # Ruta del directorio que se exportará por NFS
    # Abierto a todos para lab. Podés restringir por IP/subred (ej.: 192.168.10.0/24)
    nfs_export_line: "/var/nfs_shared *(rw,sync)" # Línea a colocar en /etc/exports con opciones NFS

  tasks: # Lista de tareas a ejecutar en orden
    - name: Paquetes necesarios (NFS + firewalld) # Asegura dependencias instaladas
      ansible.builtin.package:
        name:
          - nfs-utils # Utilidades y unidades systemd para NFS (nfs-server, exportfs, etc.)
          - firewalld # Firewall por defecto en CentOS/RHEL
        state: present # Instalar si falta; no hacer nada si ya está (idempotente)

    - name: firewalld iniciado y habilitado # Garantiza firewall activo y en arranque
      ansible.builtin.service:
        name: firewalld # Nombre del servicio
        state: started # Debe estar corriendo ahora
        enabled: true # Debe iniciar al boot

    - name: nfs-server iniciado y habilitado # Garantiza NFS activo y en arranque
      ansible.builtin.service:
        name: nfs-server # Servicio del servidor NFS
        state: started # Debe estar corriendo ahora
        enabled: true # Debe iniciar al boot

    # Abrir por PUERTO (no por servicio)             # Reglas de firewall específicas
    - name: Permitir 2049/tcp en firewalld (NFS) # Puerto NFS (TCP)
      ansible.posix.firewalld:
        port: 2049/tcp # Puerto/protocolo a habilitar
        state: enabled # Habilitar la regla
        permanent: true # Persistir en la config de firewalld
        immediate: true # Aplicar inmediatamente sin reload manual

    - name: Permitir 2049/udp en firewalld (NFS) # Puerto NFS (UDP)
      ansible.posix.firewalld:
        port: 2049/udp # Puerto/protocolo a habilitar
        state: enabled # Habilitar la regla
        permanent: true # Persistir en la config de firewalld
        immediate: true # Aplicar inmediatamente sin reload manual

    - name: Crear directorio exportado con permisos requeridos
      ansible.builtin.file:
        path: "{{ nfs_export_path }}" # Ruta del directorio a asegurar
        state: directory # Debe existir como carpeta
        owner: nobody # Propietario (usuario)
        group: nobody # Grupo
        mode: "0777" # Permisos (rwx para todos) — requerido por la consigna

    - name: Declarar export en /etc/exports # Asegura línea de export en el archivo de configuración NFS
      ansible.builtin.lineinfile:
        path: /etc/exports # Archivo de exports del servidor NFS
        line: "{{ nfs_export_line }}" # Línea exacta a colocar
        create: true # Crear el archivo si no existe
        mode: "0644" # Permisos del archivo exports
        state: present # Asegurar que la línea esté presente
        backup: true # Guardar copia antes de modificar
      notify: Releer exports # Si cambia, notifica al handler para recargar configuración

  handlers: # Handlers: se ejecutan sólo si son notificados
    - name: Releer exports # Handler que recarga exports
      ansible.builtin.command: exportfs -r # Relee /etc/exports (aplica cambios sin reiniciar NFS)
      changed_when: false # No marcar como "changed" (evita ensuciar la salida)
