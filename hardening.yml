# hardening.yml
- name: Hardening básico de Ubuntu
  hosts: ubuntu
  become: true

  collections:
    - community.general # para el módulo ufw

  vars:
    sshd_config: /etc/ssh/sshd_config

  tasks:
    # 1) Actualizar cache y luego paquetes (sin dist/full upgrade)
    # Refresca índices de APT (equivalente a apt update)
    - name: Actualizar lista de paquetes APT (apt update)
      ansible.builtin.apt:
        update_cache: true
      register: apt_update_result

    # Actualiza paquetes instalados sin full-upgrade (equivalente a apt upgrade)
    - name: Actualizar paquetes instalados (apt upgrade)
      ansible.builtin.apt:
        upgrade: yes
      register: apt_upgrade_result
      notify: Evaluar reinicio si hubo actualizaciones

    # Chequea si el sistema requiere reinicio (archivo reboot-required)
    - name: Comprobar si el sistema requiere reinicio (Ubuntu)
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    # 2) UFW habilitado: bloquear entrante, permitir solo SSH
    # Instala UFW si falta
    - name: Asegurar paquete ufw instalado
      ansible.builtin.package:
        name: ufw
        state: present

    # Habilita UFW y bloquea todo el tráfico entrante por defecto
    - name: UFW - política por defecto (deny incoming / allow outgoing)
      community.general.ufw:
        state: enabled
        direction: incoming
        policy: deny

    # Permite acceso SSH (puerto 22) para no perder conectividad
    - name: UFW - permitir OpenSSH
      community.general.ufw:
        rule: allow
        name: OpenSSH

    # Mantiene todo el tráfico saliente permitido
    - name: UFW - asegurar allow para salida
      community.general.ufw:
        direction: outgoing
        policy: allow
        state: enabled

    # 3) SSH solo con clave pública y root sin login
    # Fuerza autenticación solo por clave; deshabilita contraseñas en SSH
    - name: SSH - deshabilitar PasswordAuthentication
      ansible.builtin.lineinfile:
        path: "{{ sshd_config }}"
        regexp: '^[#\s]*PasswordAuthentication\s+'
        line: "PasswordAuthentication no"
        create: no
        backrefs: false
      notify: Reiniciar SSH si cambió configuración

    # Bloquea el login SSH directo del usuario root
    - name: SSH - deshabilitar PermitRootLogin
      ansible.builtin.lineinfile:
        path: "{{ sshd_config }}"
        regexp: '^[#\s]*PermitRootLogin\s+'
        line: "PermitRootLogin no"
        create: no
        backrefs: false
      notify: Reiniciar SSH si cambió configuración

    # 4) fail2ban instalado, habilitado y activo
    # Instala fail2ban para mitigar intentos de fuerza bruta
    - name: Instalar fail2ban
      ansible.builtin.package:
        name: fail2ban
        state: present

    # Activa y arranca el servicio fail2ban
    - name: Habilitar y arrancar fail2ban
      ansible.builtin.service:
        name: fail2ban
        enabled: true
        state: started

  handlers:
    # Handler: reinicia el equipo si hubo actualizaciones y el sistema lo requiere
    - name: Evaluar reinicio si hubo actualizaciones
      ansible.builtin.reboot:
        msg: "Reinicio automático post-actualización"
        reboot_timeout: 900
      when: reboot_required_file.stat.exists | default(false)

    # Handler: reinicia el servicio SSH cuando se modificó sshd_config
    - name: Reiniciar SSH si cambió configuración
      ansible.builtin.service:
        name: ssh # en Ubuntu el servicio es 'ssh'
        state: restarted
